<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="660,3726" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabf="clr-namespace:UiPath.Mail.Activities.Business.ForEachMail;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX DisplayName="Single Excel Process Scope" sap:VirtualizedContainerService.HintSize="670,3661" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <umab:ExchangeApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" SharedMailbox="{x:Null}" Account="jwen56@wisc.edu" DisplayName="Use Outlook 365" EmailAddress="jwen56@wisc.edu" sap:VirtualizedContainerService.HintSize="628,3571" sap2010:WorkflowViewState.IdRef="ExchangeApplicationCard_1" UseConnectionService="False">
      <umab:ExchangeApplicationCard.ApplicationId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:ExchangeApplicationCard.ApplicationId>
      <umab:ExchangeApplicationCard.Body>
        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Exchange" />
          </ActivityAction.Argument>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="616,3342" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="574,3252" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="Orders.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="562,2978" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <umab:ForEachEmailX DisplayName="For Each Email" sap:VirtualizedContainerService.HintSize="520,2888" sap2010:WorkflowViewState.IdRef="ForEachEmailX_1" IncludeSubfolders="False" Mails="[Exchange.Folder(&quot;%E6%94%B6%E4%BB%B6%E7%AE%B1&quot;)]" NumberOfEmailsLimit="100" UnreadOnly="True" WithAttachmentsOnly="False">
                      <umab:ForEachEmailX.Body>
                        <ActivityAction x:TypeArguments="snm:MailMessage, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Invoice" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="508,2650" sap2010:WorkflowViewState.IdRef="Sequence_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:WordApplicationScope AutoSave="False" CreateNewFile="False" DisplayName="Use Word File" FilePath="InvoiceTemplate.docx" sap:VirtualizedContainerService.HintSize="466,2560" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                              <p:WordApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                  </ActivityAction.Argument>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="454,2390" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:WriteCellX Cell="[Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="412,157.5" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[Invoice.Subject]" />
                                    <ueab:VLookupX ColumnIndex="4" DisplayName="VLookup" ExactMatch="True" sap:VirtualizedContainerService.HintSize="412,259.5" sap2010:WorkflowViewState.IdRef="VLookupX_1" Label="[Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;)]" SourceRange="[Excel.Sheet(&quot;Orders&quot;)]">
                                      <ueab:VLookupX.Value>
                                        <OutArgument x:TypeArguments="ue:ExcelValue">[Saved.Values(Of UiPath.Excel.ExcelValue)("Lookup Value")]</OutArgument>
                                      </ueab:VLookupX.Value>
                                    </ueab:VLookupX>
                                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="412,162.5" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[Notes.Sheet(&quot;Date&quot;).Cell(&quot;Today&quot;)]" ReplaceAll="True" Search="&lt;Current Date&gt;" />
                                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="412,162.5" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[Notes.Sheet(&quot;Date&quot;).Cell(&quot;due_date&quot;)]" ReplaceAll="True" Search="&lt;Due Date&gt;" />
                                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="412,162.5" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[string.Format(&quot;${0}&quot;, Saved.Values(Of UiPath.Excel.ExcelValue)(&quot;Lookup Value&quot;))]" ReplaceAll="True" Search="&lt;Amount Due&gt;" />
                                    <p:WordSaveAs DisplayName="Save Document As" FilePath="[string.Format(&quot;D:\WISC\24 Spring\GB 745 Robotic Process Automation\UiPath\BoltInvoices\InvoiceFiles\{0}&quot;, Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;))]" sap:VirtualizedContainerService.HintSize="412,167.5" sap2010:WorkflowViewState.IdRef="WordSaveAs_1" />
                                    <p:WordExportToPdf DisplayName="Save Document as PDF" FilePath="[string.Format(&quot;D:\WISC\24 Spring\GB 745 Robotic Process Automation\UiPath\BoltInvoices\InvoiceFiles\{0}&quot;, Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;))]" sap:VirtualizedContainerService.HintSize="412,109" sap2010:WorkflowViewState.IdRef="WordExportToPdf_1" />
                                    <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Exchange]" Body="[string.Format(&quot;Attached is your invoice. It will be due on {0}.&quot;, Notes.Sheet(&quot;Date&quot;).Cell(&quot;due_date&quot;))]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="412,394.5" sap2010:WorkflowViewState.IdRef="SendMailX_1" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[string.Format(&quot;Bolt Socks - Invoice - {0}&quot;, Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;))]" To="jwen56@wisc.edu" UseDocumentAsBody="False">
                                      <umab:SendMailX.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">[string.Format("D:\WISC\24 Spring\GB 745 Robotic Process Automation\UiPath\BoltInvoices\InvoiceFiles\{0}.pdf", Notes.Sheet("Text").Cell("Text_Input"))]</InArgument>
                                        </scg:List>
                                      </umab:SendMailX.Files>
                                      <umab:SendMailX.HtmlBodyFromFile>
                                        <umabh:HtmlContentArgument FilePath="{x:Null}">
                                          <umabh:HtmlContentArgument.RuntimeImages>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                          </umabh:HtmlContentArgument.RuntimeImages>
                                          <umabh:HtmlContentArgument.ValueMappings>
                                            <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                                          </umabh:HtmlContentArgument.ValueMappings>
                                        </umabh:HtmlContentArgument>
                                      </umab:SendMailX.HtmlBodyFromFile>
                                    </umab:SendMailX>
                                    <umab:MarkMailAsReadX DisplayName="Mark Email As Read/Unread" sap:VirtualizedContainerService.HintSize="412,132" sap2010:WorkflowViewState.IdRef="MarkMailAsReadX_1" MailMessage="[Invoice]" MarkAs="Read" />
                                    <umab:MoveMailX DisplayName="Move Email" sap:VirtualizedContainerService.HintSize="412,132" sap2010:WorkflowViewState.IdRef="MoveMailX_1" MailFolder="RPA" MailMessage="[Invoice]" />
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="412,60.5" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[string.Format(&quot;{0} - JJ&quot;, Notes.Sheet(&quot;Text&quot;).Cell(&quot;Text_Input&quot;))]" />
                                  </Sequence>
                                </ActivityAction>
                              </p:WordApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:WordApplicationScope>
                          </Sequence>
                        </ActivityAction>
                      </umab:ForEachEmailX.Body>
                      <umab:ForEachEmailX.MailFilter>
                        <umabf:MailFilterArgument LogicalOperator="And">
                          <umabf:MailFilterArgument.Filters>
                            <scg:List x:TypeArguments="umabf:SingleMailFilterArgument" Capacity="4">
                              <umabf:SingleMailFilterArgument DateEqualsFilter="{x:Null}" Criteria="From" DateFilter="SevenDays" Operator="Contains" Value="cody.baldwin@wisc.edu" />
                            </scg:List>
                          </umabf:MailFilterArgument.Filters>
                        </umabf:MailFilterArgument>
                      </umab:ForEachEmailX.MailFilter>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </umab:ForEachEmailX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </umab:ExchangeApplicationCard.Body>
      <umab:ExchangeApplicationCard.TenantId>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </umab:ExchangeApplicationCard.TenantId>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umab:ExchangeApplicationCard>
  </ueab:SequenceX>
</Activity>